syntax = "proto3";
package talaria;

// Batch represents an event batch. It contains a map of strings in order
// to minimize the size.
message Batch {
  map<uint32, bytes> strings = 1;
  repeated Event     events  = 2;
}

// Event represents a single event. Name as well as value columns are 
// interned strings which are present in a batch.
message Event {
  map<uint32, Value> value = 1;
}

// Value represents a value
message Value {
  oneof value {
    int32  int32   = 1;
    int64  int64   = 2;
    double float64 = 3;
    uint32 string  = 4;
    bool   bool    = 5;
    int64  time    = 6;
    uint32 json    = 7;
  }
}

// IngestRequest represents an ingestion request.
message IngestRequest {
  oneof data {
    Batch batch = 1; // Batch of events
    bytes orc   = 2; // An orc file
  }
}

// IngestResponse represents an ingestion response.
message IngestResponse { }

// Ingress represents a Talaria ingress frontend.
service Ingress {
  rpc Ingest(IngestRequest) returns (IngestResponse) {}
}
